// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: smaster.proto

#include "smaster.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace smaster {
class AuthRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthRequest>
      _instance;
} _AuthRequest_default_instance_;
class AuthResponceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthResponce>
      _instance;
} _AuthResponce_default_instance_;
}  // namespace smaster
namespace protobuf_smaster_2eproto {
void InitDefaultsAuthRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::smaster::_AuthRequest_default_instance_;
    new (ptr) ::smaster::AuthRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::smaster::AuthRequest::InitAsDefaultInstance();
}

void InitDefaultsAuthRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthRequestImpl);
}

void InitDefaultsAuthResponceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::smaster::_AuthResponce_default_instance_;
    new (ptr) ::smaster::AuthResponce();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::smaster::AuthResponce::InitAsDefaultInstance();
}

void InitDefaultsAuthResponce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthResponceImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaster::AuthRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaster::AuthRequest, cimei_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaster::AuthResponce, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaster::AuthResponce, authmsg_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::smaster::AuthRequest)},
  { 6, -1, sizeof(::smaster::AuthResponce)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::smaster::_AuthRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::smaster::_AuthResponce_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "smaster.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rsmaster.proto\022\007smaster\"\034\n\013AuthRequest\022"
      "\r\n\005cimei\030\001 \001(\t\"\037\n\014AuthResponce\022\017\n\007authms"
      "g\030\001 \001(\t2H\n\007SMaster\022=\n\014authenticate\022\024.sma"
      "ster.AuthRequest\032\025.smaster.AuthResponce\""
      "\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 169);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "smaster.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_smaster_2eproto
namespace smaster {

// ===================================================================

void AuthRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthRequest::kCimeiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthRequest::AuthRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_smaster_2eproto::InitDefaultsAuthRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:smaster.AuthRequest)
}
AuthRequest::AuthRequest(const AuthRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cimei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cimei().size() > 0) {
    cimei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cimei_);
  }
  // @@protoc_insertion_point(copy_constructor:smaster.AuthRequest)
}

void AuthRequest::SharedCtor() {
  cimei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuthRequest::~AuthRequest() {
  // @@protoc_insertion_point(destructor:smaster.AuthRequest)
  SharedDtor();
}

void AuthRequest::SharedDtor() {
  cimei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthRequest::descriptor() {
  ::protobuf_smaster_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_smaster_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthRequest& AuthRequest::default_instance() {
  ::protobuf_smaster_2eproto::InitDefaultsAuthRequest();
  return *internal_default_instance();
}

AuthRequest* AuthRequest::New(::google::protobuf::Arena* arena) const {
  AuthRequest* n = new AuthRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:smaster.AuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cimei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AuthRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:smaster.AuthRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cimei = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cimei()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cimei().data(), static_cast<int>(this->cimei().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "smaster.AuthRequest.cimei"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:smaster.AuthRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:smaster.AuthRequest)
  return false;
#undef DO_
}

void AuthRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:smaster.AuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cimei = 1;
  if (this->cimei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cimei().data(), static_cast<int>(this->cimei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "smaster.AuthRequest.cimei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cimei(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:smaster.AuthRequest)
}

::google::protobuf::uint8* AuthRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:smaster.AuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cimei = 1;
  if (this->cimei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cimei().data(), static_cast<int>(this->cimei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "smaster.AuthRequest.cimei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cimei(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:smaster.AuthRequest)
  return target;
}

size_t AuthRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:smaster.AuthRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cimei = 1;
  if (this->cimei().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cimei());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:smaster.AuthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:smaster.AuthRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:smaster.AuthRequest)
    MergeFrom(*source);
  }
}

void AuthRequest::MergeFrom(const AuthRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:smaster.AuthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cimei().size() > 0) {

    cimei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cimei_);
  }
}

void AuthRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:smaster.AuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthRequest::CopyFrom(const AuthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:smaster.AuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRequest::IsInitialized() const {
  return true;
}

void AuthRequest::Swap(AuthRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRequest::InternalSwap(AuthRequest* other) {
  using std::swap;
  cimei_.Swap(&other->cimei_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthRequest::GetMetadata() const {
  protobuf_smaster_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_smaster_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthResponce::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthResponce::kAuthmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthResponce::AuthResponce()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_smaster_2eproto::InitDefaultsAuthResponce();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:smaster.AuthResponce)
}
AuthResponce::AuthResponce(const AuthResponce& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  authmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.authmsg().size() > 0) {
    authmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authmsg_);
  }
  // @@protoc_insertion_point(copy_constructor:smaster.AuthResponce)
}

void AuthResponce::SharedCtor() {
  authmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuthResponce::~AuthResponce() {
  // @@protoc_insertion_point(destructor:smaster.AuthResponce)
  SharedDtor();
}

void AuthResponce::SharedDtor() {
  authmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthResponce::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthResponce::descriptor() {
  ::protobuf_smaster_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_smaster_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthResponce& AuthResponce::default_instance() {
  ::protobuf_smaster_2eproto::InitDefaultsAuthResponce();
  return *internal_default_instance();
}

AuthResponce* AuthResponce::New(::google::protobuf::Arena* arena) const {
  AuthResponce* n = new AuthResponce;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthResponce::Clear() {
// @@protoc_insertion_point(message_clear_start:smaster.AuthResponce)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AuthResponce::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:smaster.AuthResponce)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string authmsg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->authmsg().data(), static_cast<int>(this->authmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "smaster.AuthResponce.authmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:smaster.AuthResponce)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:smaster.AuthResponce)
  return false;
#undef DO_
}

void AuthResponce::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:smaster.AuthResponce)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string authmsg = 1;
  if (this->authmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authmsg().data(), static_cast<int>(this->authmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "smaster.AuthResponce.authmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->authmsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:smaster.AuthResponce)
}

::google::protobuf::uint8* AuthResponce::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:smaster.AuthResponce)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string authmsg = 1;
  if (this->authmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authmsg().data(), static_cast<int>(this->authmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "smaster.AuthResponce.authmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->authmsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:smaster.AuthResponce)
  return target;
}

size_t AuthResponce::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:smaster.AuthResponce)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string authmsg = 1;
  if (this->authmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->authmsg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthResponce::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:smaster.AuthResponce)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthResponce* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthResponce>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:smaster.AuthResponce)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:smaster.AuthResponce)
    MergeFrom(*source);
  }
}

void AuthResponce::MergeFrom(const AuthResponce& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:smaster.AuthResponce)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.authmsg().size() > 0) {

    authmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authmsg_);
  }
}

void AuthResponce::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:smaster.AuthResponce)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthResponce::CopyFrom(const AuthResponce& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:smaster.AuthResponce)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthResponce::IsInitialized() const {
  return true;
}

void AuthResponce::Swap(AuthResponce* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthResponce::InternalSwap(AuthResponce* other) {
  using std::swap;
  authmsg_.Swap(&other->authmsg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthResponce::GetMetadata() const {
  protobuf_smaster_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_smaster_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace smaster

// @@protoc_insertion_point(global_scope)
