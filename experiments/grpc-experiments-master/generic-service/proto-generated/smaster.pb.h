// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: smaster.proto

#ifndef PROTOBUF_smaster_2eproto__INCLUDED
#define PROTOBUF_smaster_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_smaster_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsAuthRequestImpl();
void InitDefaultsAuthRequest();
void InitDefaultsAuthResponceImpl();
void InitDefaultsAuthResponce();
inline void InitDefaults() {
  InitDefaultsAuthRequest();
  InitDefaultsAuthResponce();
}
}  // namespace protobuf_smaster_2eproto
namespace smaster {
class AuthRequest;
class AuthRequestDefaultTypeInternal;
extern AuthRequestDefaultTypeInternal _AuthRequest_default_instance_;
class AuthResponce;
class AuthResponceDefaultTypeInternal;
extern AuthResponceDefaultTypeInternal _AuthResponce_default_instance_;
}  // namespace smaster
namespace smaster {

// ===================================================================

class AuthRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smaster.AuthRequest) */ {
 public:
  AuthRequest();
  virtual ~AuthRequest();

  AuthRequest(const AuthRequest& from);

  inline AuthRequest& operator=(const AuthRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthRequest(AuthRequest&& from) noexcept
    : AuthRequest() {
    *this = ::std::move(from);
  }

  inline AuthRequest& operator=(AuthRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuthRequest* internal_default_instance() {
    return reinterpret_cast<const AuthRequest*>(
               &_AuthRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AuthRequest* other);
  friend void swap(AuthRequest& a, AuthRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AuthRequest& from);
  void MergeFrom(const AuthRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuthRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cimei = 1;
  void clear_cimei();
  static const int kCimeiFieldNumber = 1;
  const ::std::string& cimei() const;
  void set_cimei(const ::std::string& value);
  #if LANG_CXX11
  void set_cimei(::std::string&& value);
  #endif
  void set_cimei(const char* value);
  void set_cimei(const char* value, size_t size);
  ::std::string* mutable_cimei();
  ::std::string* release_cimei();
  void set_allocated_cimei(::std::string* cimei);

  // @@protoc_insertion_point(class_scope:smaster.AuthRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cimei_;
  mutable int _cached_size_;
  friend struct ::protobuf_smaster_2eproto::TableStruct;
  friend void ::protobuf_smaster_2eproto::InitDefaultsAuthRequestImpl();
};
// -------------------------------------------------------------------

class AuthResponce : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smaster.AuthResponce) */ {
 public:
  AuthResponce();
  virtual ~AuthResponce();

  AuthResponce(const AuthResponce& from);

  inline AuthResponce& operator=(const AuthResponce& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthResponce(AuthResponce&& from) noexcept
    : AuthResponce() {
    *this = ::std::move(from);
  }

  inline AuthResponce& operator=(AuthResponce&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthResponce& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuthResponce* internal_default_instance() {
    return reinterpret_cast<const AuthResponce*>(
               &_AuthResponce_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AuthResponce* other);
  friend void swap(AuthResponce& a, AuthResponce& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthResponce* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthResponce* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AuthResponce& from);
  void MergeFrom(const AuthResponce& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuthResponce* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string authmsg = 1;
  void clear_authmsg();
  static const int kAuthmsgFieldNumber = 1;
  const ::std::string& authmsg() const;
  void set_authmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_authmsg(::std::string&& value);
  #endif
  void set_authmsg(const char* value);
  void set_authmsg(const char* value, size_t size);
  ::std::string* mutable_authmsg();
  ::std::string* release_authmsg();
  void set_allocated_authmsg(::std::string* authmsg);

  // @@protoc_insertion_point(class_scope:smaster.AuthResponce)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr authmsg_;
  mutable int _cached_size_;
  friend struct ::protobuf_smaster_2eproto::TableStruct;
  friend void ::protobuf_smaster_2eproto::InitDefaultsAuthResponceImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AuthRequest

// string cimei = 1;
inline void AuthRequest::clear_cimei() {
  cimei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthRequest::cimei() const {
  // @@protoc_insertion_point(field_get:smaster.AuthRequest.cimei)
  return cimei_.GetNoArena();
}
inline void AuthRequest::set_cimei(const ::std::string& value) {
  
  cimei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:smaster.AuthRequest.cimei)
}
#if LANG_CXX11
inline void AuthRequest::set_cimei(::std::string&& value) {
  
  cimei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:smaster.AuthRequest.cimei)
}
#endif
inline void AuthRequest::set_cimei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cimei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:smaster.AuthRequest.cimei)
}
inline void AuthRequest::set_cimei(const char* value, size_t size) {
  
  cimei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:smaster.AuthRequest.cimei)
}
inline ::std::string* AuthRequest::mutable_cimei() {
  
  // @@protoc_insertion_point(field_mutable:smaster.AuthRequest.cimei)
  return cimei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthRequest::release_cimei() {
  // @@protoc_insertion_point(field_release:smaster.AuthRequest.cimei)
  
  return cimei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRequest::set_allocated_cimei(::std::string* cimei) {
  if (cimei != NULL) {
    
  } else {
    
  }
  cimei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cimei);
  // @@protoc_insertion_point(field_set_allocated:smaster.AuthRequest.cimei)
}

// -------------------------------------------------------------------

// AuthResponce

// string authmsg = 1;
inline void AuthResponce::clear_authmsg() {
  authmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthResponce::authmsg() const {
  // @@protoc_insertion_point(field_get:smaster.AuthResponce.authmsg)
  return authmsg_.GetNoArena();
}
inline void AuthResponce::set_authmsg(const ::std::string& value) {
  
  authmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:smaster.AuthResponce.authmsg)
}
#if LANG_CXX11
inline void AuthResponce::set_authmsg(::std::string&& value) {
  
  authmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:smaster.AuthResponce.authmsg)
}
#endif
inline void AuthResponce::set_authmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  authmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:smaster.AuthResponce.authmsg)
}
inline void AuthResponce::set_authmsg(const char* value, size_t size) {
  
  authmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:smaster.AuthResponce.authmsg)
}
inline ::std::string* AuthResponce::mutable_authmsg() {
  
  // @@protoc_insertion_point(field_mutable:smaster.AuthResponce.authmsg)
  return authmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthResponce::release_authmsg() {
  // @@protoc_insertion_point(field_release:smaster.AuthResponce.authmsg)
  
  return authmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthResponce::set_allocated_authmsg(::std::string* authmsg) {
  if (authmsg != NULL) {
    
  } else {
    
  }
  authmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authmsg);
  // @@protoc_insertion_point(field_set_allocated:smaster.AuthResponce.authmsg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace smaster

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_smaster_2eproto__INCLUDED
